## keybindings
unbind C-b
unbind C-a
unbind %
unbind ,
unbind .
unbind n
# unbind p
unbind [
unbind '"'
unbind l
unbind &
unbind "'"
unbind c

set-option -g prefix C-a # C-a for prefix just like screen

bind-key C-a    last-window
bind-key |      split-window -h
bind-key \      split-window -h
bind-key -      split-window -v
bind-key x      kill-pane
bind-key X      kill-window
bind-key q      confirm-before kill-session
bind-key Q      confirm-before kill-server
bind-key ,      previous-window # <
bind-key .      next-window     # >
bind-key <      swap-window -t :-
bind-key >      swap-window -t :+
bind-key n      command-prompt 'rename-window %%'
bind-key N      command-prompt 'rename-session %%'
bind-key Escape copy-mode -u
bind-key Up     copy-mode -u
# bind-key r      source-file $HOME/.tmux.conf; display " ✱ ~/.tmux.conf is reloaded"
bind-key R      refresh-client
bind-key a      send-key C-a
bind-key C-j    resize-pane -L 5
bind-key C-l    resize-pane -R 5
bind-key C-k    resize-pane -D 5
bind-key C-i    resize-pane -U 5
bind-key c      new-window -c "#{pane_current_path}"


# renumber windows
set-option -g renumber-windows on

## set status bar
set-option -g status-utf8 on
set-option -g status-bg colour11
set-option -g status-fg colour8

# status bar
set -g status-utf8 on
set -g status-bg black
set -g status-fg white
set -g status-left-length 40
set -g status-left '#[fg=yellow]#S ⧉ '
set -g status-right '#[fg=yellow]#(whoami)@#h'

#set-option -g status-left '⣿'
#set-option -g status-right '⡇ #[bold]❐ #S:#I#[default] ⡇ #[bold]#(whoami) ● #H#[default] '
#set-option -g status-right '⡇ ❐ #S ⡇ ❖ #(rvm tools identifier) ⡇ #(whoami) ● #H '
set-option -g status-left ' #[bold]❐ #S#[default] ⡇'
set-option -g status-right '#[bold]#(whoami) ● #H#[#(wemux status_users)] '

set-option -g status-right-length 60
set-option -g status-left-length 60

## highlight active window
set-window-option -g window-status-current-bg colour166
set-window-option -g window-status-current-fg colour15
set-window-option -g window-status-current-attr bold
set-window-option -g window-status-current-format ' #I #W '

## set window notifications
set-option -g visual-activity on
set-option -g visual-content on
set-window-option -g monitor-activity on
set-window-option -g automatic-rename off

## tmux window titling for X
set-option -g set-titles on
set-option -g set-titles-string '[#I] #W'
set-window-option -g automatic-rename on
set-window-option -g window-status-format ' #I #W '
set-window-option -g window-status-attr bold
# starts windows at 1 not 0
set-option -g base-index 1

## enable mouse
set-option -g mouse-select-pane on
set-window-option -g mode-keys vi
set-window-option -g mode-mouse on
set-window-option -gw monitor-activity off
set-window-option -gw monitor-content off
# set-option -g status-keys vi
# set-option -g history-limit 4096
set -g history-limit 262144

## pane border and colors
set-option -g pane-active-border-fg yellow
set-option -g pane-border-fg white

# set -g default-terminal "screen-256color"
set -g default-terminal "xterm-256color"
# set -g default-command $SHELL

# fix pasteboard
set-option -g default-command "reattach-to-user-namespace -l zsh; tmux rename-window zsh"

# This is so that each environment gets PATH and the like (plus the defaults
# from tmux) from the invoking shell, and NOT from the global tmux environment.
#set-option -g update-environment "PATH LESS GEM_PATH GEM_HOME DISPLAY SSH_ASKPASS SSH_AUTH_SOCK SSH_AGENT_PID SSH_CONNECTION WINDOWID XAUTHORITY"

# unbind t
# bind t run-shell 'wemux display_users'

# #T      = standard window title (last command, see ~/.bash_profile)
# #h      = short hostname
# #S      = session name
# #W      = tmux window name
# (would love to include #(pwd) here as well, but that would only print the
# current working directory relative to the session -- ie. always the starting
# cwd -- which is not very interesting)
set -g set-titles-string "#T : #h > #S > #W"

# dynamically update iTerm tab and window titles
set -g set-titles on

# mouse can be used to select panes
set -g mouse-select-pane on

# mouse can be used to select windows (by clicking in the status bar)
set -g mouse-select-window on

# mouse can be used to resize panes (by dragging dividers)
set -g mouse-resize-pane on

# not really sure what this does, but with it, the scrollwheel works inside Vim
set -g mouse-utf8 on

# allow mouse to enter copy mode and initiate selection
set -w -g mode-mouse on
